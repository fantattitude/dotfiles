# Integrate with OS X pasteboard. Do:
#   brew install reattach-to-user-namespace
# https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard
set-option -g default-command 'reattach-to-user-namespace -l zsh'

# Full color for Vim.
set -g default-terminal "screen-256color"

# Make shift+arrows, ctrl+arrows etc work in Vim.
set -g xterm-keys on

# See if this fixes slow ESC issues.
# http://unix.stackexchange.com/questions/23138/esc-key-causes-a-small-delay-in-terminal-due-to-its-alt-behavior
set -s escape-time 0

# Start window and pane indices at 1.
set -g base-index 1
set -g pane-base-index 1

# Status bar styling and content.
set -g status-bg '#ff0000'
set -g status-fg white
set -g status-left '#S'

# Highlight the active window in the status bar.
set-window-option -g window-status-current-bg yellow
set-window-option -g window-status-current-fg black

# Don't prompt to kill panes/windows.
# bind-key x kill-pane
# bind-key & kill-window

# Swap windows (Ctrl+Shift+Left|Right)
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1

# Different windows can have different sizes
setw -g aggressive-resize on

# Clear tmux scrollback history.
# Use C-l in bash to clear the shell:
# http://stackoverflow.com/questions/10543684/how-can-i-clear-scrollback-buffer-in-tmux
bind -n C-k clear-history

# Mouse support - set to on if you want to use the mouse
setw -g mode-mouse on
set -g mouse-select-pane on
set -g mouse-resize-pane on
set -g mouse-select-window on

# Splitting windows into panes with h and v
bind-key h split-window -v
bind-key v split-window -h

# set first window to index 1 (not 0) to map more to the keyboard layout...
set-option -g base-index 1
set-window-option -g pane-base-index 1

# color scheme (styled as vim-powerline)
set -g status-left-length 52
set -g status-right-length 451
set -g status-fg white
set -g status-bg colour232
set -g pane-border-fg colour245
set -g pane-active-border-fg colour39
set -g message-fg colour16
set -g message-bg colour221
set -g message-attr bold
set -g status-left '#[fg=colour235,bg=colour252,bold] %H:%M (#S) #[fg=colour252,bg=colour238,nobold]#[fg=colour245,bg=colour238,bold] #(whoami) #[fg=colour238,bg=colour234,nobold]'
set -g status-right ''
set -g window-status-format "#[fg=colour235,bg=colour252,bold] #I #W "

# Reload tmux conf.
unbind r
bind r source-file ~/.tmux.conf\; display "Reloaded conf."

# Powerline stuff
# Powerline symbols: ⮂ ⮃ ⮀ ⮁ ⭤
source "$HOME/.powerline/powerline/bindings/tmux/powerline.conf"

set -g window-status-format "#[fg=colour244,bg=colour234]#I #[fg=colour240]〉#[default]#W "
set -g window-status-current-format "#[fg=colour234,bg=colour31]#[fg=colour117,bg=colour31] #I 〉#[fg=colour231,bold]#W #[fg=colour31,bg=colour234,nobold] "


if-shell '[ $TMUX_VERSION_MAJOR -gt 1 -o \( $TMUX_VERSION_MAJOR -eq 1 -a $TMUX_VERSION_MINOR -ge 8 \) ]' \
  "set -g status-left '#{?client_prefix,#[fg=colour254]#[bg=colour31]#[bold],#[fg=colour16]#[bg=colour254]#[bold]} #S #{?client_prefix,#[fg=colour31]#[bg=colour234]#[nobold],#[fg=colour254]#[bg=colour234]#[nobold]}#(eval $POWERLINE_COMMAND tmux left)'" \
  "set -g status-left '#[fg=colour16,bg=colour254,bold] #S #[fg=colour254,bg=colour234,nobold]#(eval $POWERLINE_COMMAND tmux left)'"
  set -g status-right '#(eval $POWERLINE_COMMAND tmux right -R pane_id=`tmux display -p "#D"`)'
